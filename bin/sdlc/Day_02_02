SDLC => Software Development Life Cycle
        Yazilim Gelistirme yasam dongusu
        
        
        
        
        Planning
        Defining
        Designing
        Building
        Testing
        Deployment / Maintenance




        Plannig => planlama

        Kullanacagimiz applicationin erisilebilirligi; her yerde kullanima uygun olmalidir (Germany, France, USA)
		Tum ulkelere erisim saglanmali (Network olusturulmali)
		Tum ulkelere hitap edecek dillerin uygulamaya eklenmesi
		Bir cok tarayicida uygulanabilir olmali (chrome/firefox/internet explorer)


        Kaliteli Muhendisler (Hire people ) istihdam etme
		Kaliteli ve tecrubeli muhendisler
		sicili temiz muhendisler
		Junior veya senior muhendisler istihdam edilmeli



        Kaliteli soforler istihdam edilmelidir
 		Soforlerin egitimden gecirilmesi(training saglanmasi)
 		Ozel lisanslari olmali
 		Sicilleri temiz olmali
 		
 		
 		
        Guvenlik hat saffada olusturulmalidir
 		Kullanilacak araclarin standartlari belirlenmeli
 		Sirketin finansal durumu muhakkak bankalarla anlasilarak desteklenmeli
 		Odeme guvenlikleri / kisisel verileri koruma



  		Feedback => musterilerden gelen fikirler / ongorulerdir /geri donusler.

		
		BRD => Business Requirement Document => Is gereksinim belgesi
	
		BA => Business Analyst tir
BRD 
FRD => Functional requirement document fonksyonel olarak hazirlanmasi gereken gereksinimler dokumani

Designing => gorsellerin olusturulmasinda BRD dikkate alinarak birden fazla dizayn olusturulur.

DDS Design Document Specification => BRD referans olarak alinir ve bunun uzerinden DDS olusturulur

Designers  / Solution Architects (cozum mimari)=>  Tasarimcilar tarafindan gerceklestirilir

Building => Kaliteli kodlar yazilir ve FRD baz alinarak developerlar gereken functionalityleri olusturlar

Testing => test asamasinda ortaya cikarilan urun kalite standartlarina uygun olmalidir.

Test => takip => hata var => yeniden developer a yonlendirme(raporlama) => fix edilmesi(hatanin duzeltilmesi) => yeniden test etme
Actual result   (Suanki sonuc)    => access verilmedi
Expected result (Beklenen sonuc)  => access verilmemeli(giris izni verilmemeli)
status (statu) => pass(gecti)

Test data (veriler)
Numara => 2020202020
password => 12345
sonra login butona tikla ve sonuc gecersiz sifre veya password

manual tester => functional tester
automation tester => SDET
Cross-functional tester
QA => Quality Analyst

STLC => Software Testing Life Cycle
        Yazilim Test  yasam dongusu

Deploymet => artik urun kullaniciya aktariliyor
end-user / customer=> musterilerimiz
feedbacks => musterilerimizden feedbackler aliyoruz 
maintenance(bakim) =>  musteri feedbackleri degerlendirilir ve guncellenir

Environment (alan) => 
Development environment => 
Test environment (test asamasi) => 
Stage environment (prod incesi sahne) => urun end-client oncesi bura olur
Prod environment (urun asamasi) => 
Ozetle =>

Planning => Oncelikli olarak bir urun dusunulur ve genel hatlariyla planlamasi yapilir
fikir gelistirilir ve degerlendirilir

Defining (tanimlama) => alinan kararlar dokumantasyona dokulerek detayli bir feasibility calismasi yapilmis olur
BRD => Business Requirement Document => is gereksinim dokumani
FRD => Functional Requirement document lar olusturulur Fonksyonel Gereksinim dokumani 

Designing (tasarim asamasi) => burada Solution architects(cozum mimarlari) bir cok gorsel sema olusturur ve BRD referans alarak DDS olustururlar 
DDS => Design Document specification => tasarim dokumani spesifikasyonu

Building (yazilim asamasi) => artik tum dokumanlar hazirdir ve developerlar tarafindan uygulama yazilmaya baslanir.

Testing => testerlar devreye girer ve application beklenen gereksinimlere gore test ederler
QA => Kalite konrolculer tarafindan yapilir

Deployment (release/serbest birakma) => atik urun hazirdir ve piyasaya cikartilir / yani end-client/user(musteriler) larla bulusturulur.

Maintenance => ayni sekilde musterilerin feedbackleri degerlendirilir ve yeniden uygulamaya gecirilir.


Waterfall method (Selale metodu)  == Agile methods

Waterfall => Daha eski bir yazilim gelistirme metodudur.
Her hangi bir asama bitmeden bi sonraki asamaya gecilmez bu yuzden selale ismini almistir


Waterfall da test asamasi en son gelir.
Waterfall daha cok kucuk projelerde daha uygulanabilir haldedir
Genelde devlet firmalari tarafindan uygulanir
uzun soluklu projelerde tercih edilmez
Musteri memnuniyeti onemsenmez
Kolay yonetilir

Userfriendly degildir => kullanici dostu degildir

Waterfall mu yoksa Agile i mi tercih edersiniz?
Ben ikisini de iyi biliyorum ve tecrubeliyim benim icin fark etmez ve iki ortamda da calisabilirim
	 